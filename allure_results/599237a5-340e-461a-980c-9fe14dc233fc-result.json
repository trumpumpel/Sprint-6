{"name": "Проверка работы формы заказа с помощью параметризации", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: Unable to locate element: .react-datepicker__day--selected; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:193:5\nNoSuchElementError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:511:5\ndom.find/</<@chrome://remote/content/shared/DOM.sys.mjs:136:16", "trace": "self = <pages.order_page.OrderPage object at 0x0000022FB3B8BC80>\nelement = <selenium.webdriver.remote.webelement.WebElement (session=\"68e93c7d-a470-425c-96df-72d542f10a5c\", element=\"0ee362ca-e621-45de-b7df-a3bb576f62c7\")>\ntext = 'Измайловская'\n\n    def select_by_list(self, element, text: str):\n        with allure.step(\"Ищем элемент в списке и кликаем по нему\"):\n            if element:\n                element.click()\n                element.send_keys(text)\n                try:\n>                   list_element = self.driver.find_element(By.XPATH, f\"//button/div[text()= '{text}']\")\n\npages\\base_page.py:58: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\AppData\\Local\\JetBrains\\PyCharmCE2024.1\\demo\\PyCharmLearningProject\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:741: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n..\\..\\AppData\\Local\\JetBrains\\PyCharmCE2024.1\\demo\\PyCharmLearningProject\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000022FB3B88A10>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"Unable to locate element: //button/div[text().../content/shared/webdriver/Errors.sys.mjs:511:5\\\\ndom.find/</<@chrome://remote/content/shared/DOM.sys.mjs:136:16\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: Unable to locate element: //button/div[text()= 'Измайловская']; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       RemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nE       WebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:193:5\nE       NoSuchElementError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:511:5\nE       dom.find/</<@chrome://remote/content/shared/DOM.sys.mjs:136:16\n\n..\\..\\AppData\\Local\\JetBrains\\PyCharmCE2024.1\\demo\\PyCharmLearningProject\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: NoSuchElementException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_order_page.TestOrderPage object at 0x0000022FB3AD5D90>\ndriver = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"68e93c7d-a470-425c-96df-72d542f10a5c\")>\nname = 'Эдуард', surname = 'Шеварнадзе', address = '', metro = 'Измайловская', phone = '89139139133'\ndate_deliver = '25.05.2022'\n\n    @allure.title('Проверка работы формы заказа с помощью параметризации')\n    @allure.description('На странице ищем поля ввода, заполняем данными и проверяем, что заказ будет оформлен при '\n                        'условии корректного заполнения формы')\n    @pytest.mark.parametrize(\n        'name, surname, address, metro, phone, date_deliver',\n        [\n            ['Эдуард', 'Шеварнадзе', 'Измайловский проспект, 59', 'Измайловская', '89139139133', '25.05.2022'],\n            ['Эдуард', 'Шеварнадзе', 'Измайловский проспект, 59', 'Измайловская', '89139139133', '25.06.2022'],\n            ['', 'Шеварнадзе', 'Измайловский проспект, 59', 'Измайловская', '89139139133', '25.05.2022'],\n            ['Эдуард', '', 'Измайловский проспект, 59', 'Измайловская', '89139139133', '25.05.2022'],\n            ['Эдуард', 'Шеварнадзе', '', 'Измайловская', '89139139133', '25.05.2022'],\n            ['Эдуард', 'Шеварнадзе', 'Измайловский проспект, 59', '', '89139139133', '25.05.2022'],\n            ['Эдуард', 'Шеварнадзе', 'Измайловский проспект, 59', 'Измайловская', '', '25.05.2022']\n        ]\n    )\n    def test_order_form(self, driver, name, surname, address, metro, phone, date_deliver):\n        order_page = OrderPage(driver)\n        order_page.open_page()\n        order_page.enter_text(OrderPageLocators.NAME_ORDER, name, 5)\n        order_page.enter_text(OrderPageLocators.SURNAME_ORDER, surname, 5)\n        order_page.enter_text(OrderPageLocators.ADDRESS_ORDER, address, 5)\n>       order_page.select_metro(metro)\n\ntests\\test_order_page.py:35: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\order_page.py:45: in select_metro\n    self.select_by_list(metro_element, text)\npages\\base_page.py:60: in select_by_list\n    list_element = self.driver.find_element(By.CSS_SELECTOR, \".react-datepicker__day--selected\")\n..\\..\\AppData\\Local\\JetBrains\\PyCharmCE2024.1\\demo\\PyCharmLearningProject\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:741: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n..\\..\\AppData\\Local\\JetBrains\\PyCharmCE2024.1\\demo\\PyCharmLearningProject\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000022FB3B88A10>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"Unable to locate element: .react-datepicker__.../content/shared/webdriver/Errors.sys.mjs:511:5\\\\ndom.find/</<@chrome://remote/content/shared/DOM.sys.mjs:136:16\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: Unable to locate element: .react-datepicker__day--selected; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       RemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nE       WebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:193:5\nE       NoSuchElementError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:511:5\nE       dom.find/</<@chrome://remote/content/shared/DOM.sys.mjs:136:16\n\n..\\..\\AppData\\Local\\JetBrains\\PyCharmCE2024.1\\demo\\PyCharmLearningProject\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: NoSuchElementException"}, "description": "На странице ищем поля ввода, заполняем данными и проверяем, что заказ будет оформлен при условии корректного заполнения формы", "steps": [{"name": "Открываем страницу", "status": "passed", "steps": [{"name": "Открываем страницу", "status": "passed", "start": 1716573710476, "stop": 1716573710551}], "start": 1716573710476, "stop": 1716573710551}, {"name": "Вводим текст", "status": "passed", "steps": [{"name": "Ищем элемент на странице", "status": "passed", "start": 1716573710551, "stop": 1716573710560}], "start": 1716573710551, "stop": 1716573710835}, {"name": "Вводим текст", "status": "passed", "steps": [{"name": "Ищем элемент на странице", "status": "passed", "start": 1716573710835, "stop": 1716573710838}], "start": 1716573710835, "stop": 1716573711058}, {"name": "Вводим текст", "status": "passed", "steps": [{"name": "Ищем элемент на странице", "status": "passed", "start": 1716573711058, "stop": 1716573711060}], "start": 1716573711058, "stop": 1716573711277}, {"name": "Выбираем из списка текст {metro_element} и кликаем", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: Unable to locate element: .react-datepicker__day--selected; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:193:5\nNoSuchElementError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:511:5\ndom.find/</<@chrome://remote/content/shared/DOM.sys.mjs:136:16\n\n", "trace": "  File \"C:\\Users\\trump\\Sprint's\\Sprint_6\\pages\\order_page.py\", line 45, in select_metro\n    self.select_by_list(metro_element, text)\n  File \"C:\\Users\\trump\\Sprint's\\Sprint_6\\pages\\base_page.py\", line 60, in select_by_list\n    list_element = self.driver.find_element(By.CSS_SELECTOR, \".react-datepicker__day--selected\")\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\trump\\AppData\\Local\\JetBrains\\PyCharmCE2024.1\\demo\\PyCharmLearningProject\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 741, in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\trump\\AppData\\Local\\JetBrains\\PyCharmCE2024.1\\demo\\PyCharmLearningProject\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Users\\trump\\AppData\\Local\\JetBrains\\PyCharmCE2024.1\\demo\\PyCharmLearningProject\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "steps": [{"name": "Ищем элемент на странице", "status": "passed", "start": 1716573711277, "stop": 1716573711280}, {"name": "Ищем элемент в списке и кликаем по нему", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: Unable to locate element: .react-datepicker__day--selected; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:193:5\nNoSuchElementError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:511:5\ndom.find/</<@chrome://remote/content/shared/DOM.sys.mjs:136:16\n\n", "trace": "  File \"C:\\Users\\trump\\Sprint's\\Sprint_6\\pages\\base_page.py\", line 60, in select_by_list\n    list_element = self.driver.find_element(By.CSS_SELECTOR, \".react-datepicker__day--selected\")\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\trump\\AppData\\Local\\JetBrains\\PyCharmCE2024.1\\demo\\PyCharmLearningProject\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 741, in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\trump\\AppData\\Local\\JetBrains\\PyCharmCE2024.1\\demo\\PyCharmLearningProject\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Users\\trump\\AppData\\Local\\JetBrains\\PyCharmCE2024.1\\demo\\PyCharmLearningProject\\venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1716573711280, "stop": 1716573711530}], "start": 1716573711277, "stop": 1716573711530}], "parameters": [{"name": "name", "value": "'Эдуард'"}, {"name": "surname", "value": "'Шеварнадзе'"}, {"name": "address", "value": "''"}, {"name": "metro", "value": "'Измайловская'"}, {"name": "phone", "value": "'89139139133'"}, {"name": "date_deliver", "value": "'25.05.2022'"}], "start": 1716573710476, "stop": 1716573711531, "uuid": "dfc57b3b-c61b-410b-915d-b457a0a2bb68", "historyId": "c3e54e871efd272bef286adcd9db8400", "testCaseId": "3efc561ae8634ffa0464c8b1a72551ac", "fullName": "tests.test_order_page.TestOrderPage#test_order_form", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_order_page"}, {"name": "subSuite", "value": "TestOrderPage"}, {"name": "host", "value": "DESKTOP-KUMEG7E"}, {"name": "thread", "value": "1432-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_order_page"}]}